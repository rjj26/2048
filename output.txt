Traceback (most recent call last):
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/mcts_heuristics.py", line 322, in <module>
    best_weights_found, best_score_found = random_search(num_iterations)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/mcts_heuristics.py", line 302, in random_search
    average_score, _ = game.simulate_game(policy_function)  # Use only the score
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/game_2048.py", line 270, in simulate_game
    action = policy(matrix, moves)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/mcts_heuristics.py", line 283, in fxn
    best_action = m.search(position, input_time)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/mcts_heuristics.py", line 39, in search
    reward = self.simulate(node)
             ^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/mcts_heuristics.py", line 91, in simulate
    while not game.is_game_over(current_state):
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/game_2048.py", line 68, in is_game_over
    moves = get_all_moves(mat)
            ^^^^^^^^^^^^^^^^^^
  File "/Users/vinhtran/Desktop/junior/fall/CS474/finalproj/game_2048.py", line 97, in get_all_moves
    for i in range(4):
             ^^^^^^^^
KeyboardInterrupt
